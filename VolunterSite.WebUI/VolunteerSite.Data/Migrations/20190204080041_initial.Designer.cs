// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolunteerSite.Data.Context;

namespace VolunteerSite.Data.Migrations
{
    [DbContext(typeof(VolunteerSiteDbContext))]
    [Migration("20190204080041_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VolunteerSite.Domain.Models.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("TotalHours");

                    b.Property<string>("VolunteerGroupId");

                    b.Property<int?>("VolunteerGroupId1");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerGroupId1");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.JobListing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("OrganizationId");

                    b.Property<int?>("OrganizationId1");

                    b.Property<int>("PositionsAvailable");

                    b.Property<string>("State");

                    b.Property<string>("TypeOfJob");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId1");

                    b.ToTable("JobListings");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Email");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SkillsAndExperience");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.VolunteerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName");

                    b.Property<string>("GroupOwnerId");

                    b.Property<int?>("GroupOwnerId1");

                    b.HasKey("Id");

                    b.HasIndex("GroupOwnerId1");

                    b.ToTable("VolunteerGroups");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.GroupMember", b =>
                {
                    b.HasOne("VolunteerSite.Domain.Models.VolunteerGroup", "VolunteerGroup")
                        .WithMany("GroupMembers")
                        .HasForeignKey("VolunteerGroupId1");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.JobListing", b =>
                {
                    b.HasOne("VolunteerSite.Domain.Models.Organization", "Organization")
                        .WithMany("JobListings")
                        .HasForeignKey("OrganizationId1");
                });

            modelBuilder.Entity("VolunteerSite.Domain.Models.VolunteerGroup", b =>
                {
                    b.HasOne("VolunteerSite.Domain.Models.Volunteer", "GroupOwner")
                        .WithMany("VolunteerGroups")
                        .HasForeignKey("GroupOwnerId1");
                });
#pragma warning restore 612, 618
        }
    }
}
